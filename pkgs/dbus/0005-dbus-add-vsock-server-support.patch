From 1f770dab67ddf78a6c327eebf25086e207a0f6e2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Date: Sun, 10 Jan 2021 00:43:20 +0400
Subject: [PATCH 5/9] dbus: add vsock: server support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
SPDX-License-Identifier: AFL-2.1 OR GPL-2.0-or-later
SPDX-FileCopyrightText: 2002, 2003, 2004, 2006  Red Hat Inc.
SPDX-FileCopyrightText: The D-Bus Authors

Signed-off-by: Marc-Andr√© Lureau <marcandre.lureau@redhat.com>
---
 dbus/dbus-server-socket.c | 55 +++++++++++++++++++++++++++++++++++++++
 dbus/dbus-server-socket.h |  3 +++
 dbus/dbus-server-unix.c   | 20 ++++++++++++++
 3 files changed, 78 insertions(+)

diff --git a/dbus/dbus-server-socket.c b/dbus/dbus-server-socket.c
index bc5e3a9d..074b2dfd 100644
--- a/dbus/dbus-server-socket.c
+++ b/dbus/dbus-server-socket.c
@@ -29,6 +29,10 @@
 #include "dbus-memory.h"
 #include "dbus-nonce.h"
 #include "dbus-string.h"
+#ifdef DBUS_ENABLE_VSOCK
+#include "dbus-sysdeps.h"
+#include "dbus-sysdeps-unix.h"
+#endif
 
 /**
  * @defgroup DBusServerSocket DBusServer implementations for SOCKET
@@ -395,6 +399,57 @@ failed:
   return NULL;
 }
 
+#ifdef DBUS_ENABLE_VSOCK
+DBusServer *
+_dbus_server_new_for_vsock (const char       *cid,
+                            const char       *port,
+                            DBusError        *error)
+{
+  DBusServer *server = NULL;
+  DBusSocket listen_fd = DBUS_SOCKET_INIT;
+  DBusString address = _DBUS_STRING_INIT_INVALID;
+  DBusString cid_str = _DBUS_STRING_INIT_INVALID;
+  DBusString port_str = _DBUS_STRING_INIT_INVALID;
+
+  _DBUS_ASSERT_ERROR_IS_CLEAR (error);
+
+  if (!_dbus_string_init (&address) ||
+      !_dbus_string_init (&cid_str) ||
+      !_dbus_string_init (&port_str))
+    {
+      dbus_set_error (error, DBUS_ERROR_NO_MEMORY, NULL);
+      goto out;
+    }
+
+  listen_fd.fd = _dbus_listen_vsock (cid, port, &cid_str, &port_str, error);
+  if (!_dbus_socket_is_valid (listen_fd))
+    {
+      _DBUS_ASSERT_ERROR_IS_SET (error);
+      goto out;
+    }
+
+  if (!_dbus_string_append (&address, "vsock:cid=") ||
+      !_dbus_string_append (&address, _dbus_string_get_const_data (&cid_str)) ||
+      !_dbus_string_append (&address, ",port=") ||
+      !_dbus_string_append (&address, _dbus_string_get_const_data (&port_str)))
+    {
+      dbus_set_error (error, DBUS_ERROR_NO_MEMORY, NULL);
+      goto out;
+    }
+
+  server = _dbus_server_new_for_socket (&listen_fd, 1, &address, NULL, error);
+  if (server)
+    _dbus_socket_invalidate (&listen_fd);
+
+out:
+  _dbus_close_socket (listen_fd, NULL);
+  _dbus_string_free (&cid_str);
+  _dbus_string_free (&port_str);
+  _dbus_string_free (&address);
+  return server;
+}
+#endif
+
 /**
  * Creates a new server listening on TCP.
  * If host is NULL, it will default to localhost.
diff --git a/dbus/dbus-server-socket.h b/dbus/dbus-server-socket.h
index ee5bf45f..d2461148 100644
--- a/dbus/dbus-server-socket.h
+++ b/dbus/dbus-server-socket.h
@@ -34,6 +34,9 @@ DBusServer* _dbus_server_new_for_socket           (DBusSocket       *fds,
                                                    const DBusString *address,
                                                    DBusNonceFile    *noncefile,
                                                    DBusError        *error);
+DBusServer* _dbus_server_new_for_vsock            (const char       *cid,
+                                                   const char       *port,
+                                                   DBusError        *error);
 DBusServer* _dbus_server_new_for_autolaunch       (const DBusString *address,
                                                    DBusError        *error);
 DBUS_PRIVATE_EXPORT
diff --git a/dbus/dbus-server-unix.c b/dbus/dbus-server-unix.c
index c7ace2bc..0f34fa8e 100644
--- a/dbus/dbus-server-unix.c
+++ b/dbus/dbus-server-unix.c
@@ -287,6 +287,26 @@ _dbus_server_listen_platform_specific (DBusAddressEntry *entry,
           return DBUS_SERVER_LISTEN_DID_NOT_CONNECT;
         }
     }
+#endif
+#ifdef DBUS_ENABLE_VSOCK
+  else if (strcmp (method, "vsock") == 0)
+    {
+      const char *vsock_cid_var = dbus_address_entry_get_value (entry, "cid");
+      const char *vsock_port_var = dbus_address_entry_get_value (entry, "port");
+      *server_p = _dbus_server_new_for_vsock (vsock_cid_var, vsock_port_var, error);
+
+      if (*server_p != NULL)
+        {
+          _DBUS_ASSERT_ERROR_IS_CLEAR(error);
+          return DBUS_SERVER_LISTEN_OK;
+        }
+      else
+        {
+          _DBUS_ASSERT_ERROR_IS_SET(error);
+          return DBUS_SERVER_LISTEN_DID_NOT_CONNECT;
+        }
+
+    }
 #endif
   else
     {
-- 
2.42.0

