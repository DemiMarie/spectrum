From f007236005cf26015e5dcdccb5161b9f2b85d134 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Date: Sat, 9 Jan 2021 22:05:53 +0400
Subject: [PATCH 8/9] test: add simple loopback vsock: test
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
SPDX-License-Identifier: GPL-2.0-or-later
SPDX-FileCopyrightText: 2010-2012 Nokia Corporation
SPDX-FileCopyrightText: 2013-2015 Collabora Ltd.
SPDX-FileCopyrightText: The D-Bus Authors

Signed-off-by: Marc-Andr√© Lureau <marcandre.lureau@redhat.com>
---
 test/loopback.c        | 40 ++++++++++++++++++++++++++++++++++++++++
 test/test-utils-glib.c | 10 ++++++++++
 test/test-utils-glib.h |  1 +
 3 files changed, 51 insertions(+)

diff --git a/test/loopback.c b/test/loopback.c
index f89f5a95..f02ef8d6 100644
--- a/test/loopback.c
+++ b/test/loopback.c
@@ -35,6 +35,10 @@
 
 #include <errno.h>
 #include <string.h>
+#ifdef DBUS_ENABLE_VSOCK
+#include <sys/socket.h>
+#include <linux/vm_sockets.h>
+#endif
 
 #include "test-utils-glib.h"
 
@@ -107,6 +111,15 @@ setup (Fixture *f,
       return;
     }
 
+#ifdef DBUS_ENABLE_VSOCK
+  if ((g_str_has_prefix (addr, "vsock:") &&
+       !test_check_vsock_works ()))
+    {
+      f->skip = TRUE;
+      return;
+    }
+#endif
+
   f->server = dbus_server_listen (addr, &f->e);
   assert_no_error (&f->e);
   g_assert (f->server != NULL);
@@ -260,6 +273,28 @@ test_connect (Fixture *f,
       /* No particular statement about the path here: for that see
        * setup_runtime() and setup_no_runtime() */
     }
+#endif
+#ifdef DBUS_ENABLE_VSOCK
+  else if (g_strcmp0 (listening_address, "vsock:") == 0)
+    {
+      DBusString addr_str;
+      const char *cid = dbus_address_entry_get_value (entries[0], "cid");
+      const char *port = dbus_address_entry_get_value (entries[0], "port");
+
+      g_assert_cmpstr (dbus_address_entry_get_method (entries[0]), ==, "vsock");
+
+      g_assert_nonnull (cid);
+      g_assert_cmpstr (cid, ==, "4294967295");
+      dbus_free (address);
+      address = NULL;
+
+      _dbus_string_init (&addr_str);
+      _dbus_string_append_printf (&addr_str, "vsock:cid=%u,port=%s",
+                                  1 /* VMADDR_CID_LOCAL */, port);
+      _dbus_string_steal_data (&addr_str, &address);
+      _dbus_string_free (&addr_str);
+      g_assert_nonnull (address);
+    }
 #endif
   else
     {
@@ -523,6 +558,11 @@ main (int argc,
       test_bad_guid, teardown);
 #endif
 
+#ifdef DBUS_ENABLE_VSOCK
+  g_test_add ("/connect/vsock", Fixture, "vsock:", setup,
+      test_connect, teardown);
+#endif
+
   ret = g_test_run ();
   dbus_shutdown ();
   return ret;
diff --git a/test/test-utils-glib.c b/test/test-utils-glib.c
index 2aafb03e..de24f685 100644
--- a/test/test-utils-glib.c
+++ b/test/test-utils-glib.c
@@ -899,6 +899,16 @@ test_check_tcp_works (void)
 #endif
 }
 
+#ifdef DBUS_ENABLE_VSOCK
+gboolean
+test_check_vsock_works (void)
+{
+  int fd = socket (AF_VSOCK, SOCK_STREAM, 0);
+  g_close (fd, NULL);
+  return fd >= 0;
+}
+#endif
+
 /*
  * Store the result of an async operation. @user_data is a pointer to a
  * variable that can store @result, initialized to %NULL.
diff --git a/test/test-utils-glib.h b/test/test-utils-glib.h
index c4a2c543..d24cb382 100644
--- a/test/test-utils-glib.h
+++ b/test/test-utils-glib.h
@@ -131,6 +131,7 @@ backported_g_steal_pointer (gpointer pointer_to_pointer)
 #endif
 
 gboolean test_check_tcp_works (void);
+gboolean test_check_vsock_works (void);
 
 void test_store_result_cb (GObject *source_object,
                            GAsyncResult *result,
-- 
2.42.0

